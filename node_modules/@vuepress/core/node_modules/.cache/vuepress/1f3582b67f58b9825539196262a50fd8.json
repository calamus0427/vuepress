{"remainingRequest":"/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/calamus/calamus/my-project/vue-press/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/calamus/calamus/my-project/vue-press/docs/zh/theme/writing-a-theme.md?vue&type=template&id=0e1f6142&","dependencies":[{"path":"/Users/calamus/calamus/my-project/vue-press/docs/zh/theme/writing-a-theme.md","mtime":1547029404000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/@vuepress/markdown-loader/index.js","mtime":1546968779000}],"contextDependencies":[],"result":["\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><h1 id=\"开发主题\"><a class=\"header-anchor\" href=\"#开发主题\" aria-hidden=\"true\">#</a> 开发主题</h1>\n<p>想要书写一个主题，首先在你文档根目录创建一个 <code>.vuepress/theme</code> 目录，接着创建一个 <code>Layout.vue</code> 文件：</p>\n<pre class=\"vue-container\"><code><p>.\n└─ .vuepress\n └─ <code>theme</code>\n     └─ Layout.vue</p>\n</code></pre><p>到这里，就像开发一个普通的 Vue 应用一样。如何组织你的主题，这完全取决于你。</p>\n<h2 id=\"获取渲染内容\"><a class=\"header-anchor\" href=\"#获取渲染内容\" aria-hidden=\"true\">#</a> 获取渲染内容</h2>\n<p>当前的 <code>.md</code> 文件渲染的内容，可以作为一个独特的全局组件 <code>&lt;Content/&gt;</code> 来使用，你可能想要它显示在页面中的某个地方。一个最简单的主题，可以是一个唯一的 <code>Layout.vue</code> 组件，并包含以下内容：</p>\n<!--beforebegin--><div class=\"language-html line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>theme-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Content</span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><p><strong>更多请阅读:</strong></p>\n<ul>\n<li><router-link to=\"./../guide/markdown-slot.html\">Markdown 插槽</router-link></li>\n</ul>\n<h2 id=\"内容摘抄\"><a class=\"header-anchor\" href=\"#内容摘抄\" aria-hidden=\"true\">#</a> 内容摘抄</h2>\n<p>如果一个 markdown 文件中有一个 <code>&lt;!-- more --&gt;</code> 注释，则该注释之前的内容会被抓取并暴露在 <code>$page.excerpt</code> 属性中。如果你在开发一个博客主题，你可以用这个属性来渲染一个带摘抄的文章列表。</p>\n<h2 id=\"目录结构\"><a class=\"header-anchor\" href=\"#目录结构\" aria-hidden=\"true\">#</a> 目录结构</h2>\n<p>随着需求的变化，只有一个布局组件 <code>Layout.vue</code> 可能还不够，你可能想要定义更多的布局组件用于不同的页面，你可能还想要自定义一个<router-link to=\"./../config/#palette-styl\">调色板</router-link>, 甚至应用一些插件。</p>\n<p>那么是时候重新组织你的主题了！一个约定的主题的目录结构如下：</p>\n<pre class=\"vue-container\"><code><p>themePath\n├── <code>global-components</code> <em>(<strong>可选的</strong>)</em>\n│   └── xxx.vue\n├── <code>components</code> <em>(<strong>可选的</strong>)</em>\n│   └── xxx.vue\n├── <code>layouts</code>\n│   ├── Layout.vue <em>(<strong>必要的</strong>)</em>\n│   └── 404.vue <em>(<strong>可选的</strong>)</em>\n├── <code>styles</code> <em>(<strong>必要的</strong>)</em>\n│   ├── index.styl\n│   └── palette.styl\n├── <code>templates</code> <em>(<strong>必要的</strong>)</em>\n│   ├── dev.html\n│   └── ssr.html\n├── <code>index.js</code> <em>(<strong>当你将主题发布为一个 npm 包时，这是必须的！</strong>)</em>\n├── <code>enhanceApp.js</code> <em>(<strong>必要的</strong>)</em>\n└── package.json</p>\n</code></pre><ul>\n<li><code>theme/global-components</code>: 该目录下的组件都会被自动注册为全局组件。想了解更多，请参考 <a href=\"https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/plugin-register-components\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-register-components<OutboundLink/></a>。</li>\n<li><code>theme/components</code>: Vue 组件。</li>\n<li><code>theme/layouts</code>: 布局组件，其中  <code>Layout.vue</code> 是必需的。</li>\n<li><code>theme/styles</code>: 全局的样式和调色板。</li>\n<li><code>theme/templates</code>: 修改默认的模板文件。</li>\n<li><code>theme/index.js</code>: 主题文件的入口文件。</li>\n<li><code>theme/enhanceApp.js</code>: 主题水平的客户端增强文件。</li>\n</ul>\n<div class=\"warning custom-block\"><p class=\"custom-block-title\">注意</p>\n<p>当你将你的主题以一个 npm 包的形式发布时，请确保这个包包含 <code>index.js</code>，同时将 <code>package.json</code> 中的 <code>&quot;main&quot;</code> 字段设置为 <code>index.js</code>，如此一来 VuePress 才能获取到正确的 <router-link to=\"./../miscellaneous/glossary.html#theme-side\">themePath</router-link>.</p>\n<!--beforebegin--><div class=\"language-json line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  ...\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span>\n  ...\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--></div>\n<h2 id=\"布局组件\"><a class=\"header-anchor\" href=\"#布局组件\" aria-hidden=\"true\">#</a> 布局组件</h2>\n<p>假设你的主题 <code>layouts</code> 目录如下：</p>\n<pre class=\"vue-container\"><code><p>theme\n└── <code>layouts</code>\n   ├── Layout.vue\n   ├── AnotherLayout.vue\n   └── 404.vue</p>\n</code></pre><p>然后，所有的页面将会默认使用 <code>Layout.vue</code> 作为布局组件，对于那些匹配不到的路由将会使用 <code>404.vue</code>。</p>\n<p>如果你想要在某一个页面中使用 <code>AnotherLayout.vue</code> 作为布局组件，那么你只需要更新这个页面的 <code>frontmatter</code>：</p>\n<!--beforebegin--><div class=\"language-markdown line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-markdown\"><code><span class=\"token hr punctuation\">---</span>\n<span class=\"token title important\">layout: AnotherLayout\n<span class=\"token punctuation\">---</span></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><h2 id=\"使用插件\"><a class=\"header-anchor\" href=\"#使用插件\" aria-hidden=\"true\">#</a> 使用插件</h2>\n<p>你可以通过主题的配置文件 <code>themePath/index.js</code> 来给主题应用一些插件：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'@vuepress/pwa'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> \n      serviceWorker<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      updatePopup<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br></div><!--beforeend--></div><!--afterend--><h2 id=\"网站和页面的元数据\"><a class=\"header-anchor\" href=\"#网站和页面的元数据\" aria-hidden=\"true\">#</a> 网站和页面的元数据</h2>\n<p><code>Layout</code> 组件将会对每一个文档目录下的 <code>.md</code> 执行一次，同时，整个网站以及特定页面的元数据将分别暴露为 <code>this.$site</code> 和 <code>this.$page</code> 属性，它们将会被注入到每一个当前应用的组件中。</p>\n<p>这是你现在看到的这个网站的 <code>$site</code> 的值：</p>\n<!--beforebegin--><div class=\"language-json line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"VuePress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Vue 驱动的静态网站生成器\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"base\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"pages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"lastUpdated\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1524027677000</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"VuePress\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"frontmatter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    ...\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br></div><!--beforeend--></div><!--afterend--><p><code>title</code>, <code>description</code> 和 <code>base</code> 会从 <code>.vuepress/config.js</code> 中对应的的字段复制过来，而 <code>pages</code> 是一个包含了每个页面元数据对象的数据，包括它的路径、页面标题（明确地通过 <router-link to=\"./../guide/markdown.html#front-matter\">YAML front matter</router-link> 指定，或者通过该页面的第一个标题取到），以及所有源文件中的 <code>YAML front matter</code> 的数据。</p>\n<p>下面的这个对象是你正在看的这个页面的 <code>$page</code> 的值：</p>\n<!--beforebegin--><div class=\"language-json line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"lastUpdated\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1524847549000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/custom-themes.html\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"自定义主题\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"headers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>/* ... */<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"frontmatter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div><!--beforeend--></div><!--afterend--><p>如果用户在 <code>.vuepress/config.js</code> 配置了 <code>themeConfig</code>，你将可以通过 <code>$site.themeConfig</code> 访问到它。如此一来，你可以通过它来对用户开放一些自定义主题的配置 —— 比如指定目录或者页面的顺序，你也可以结合 <code>$site.pages</code> 来动态地构建导航链接。</p>\n<p>最后，别忘了，作为 Vue Router API 的一部分，<code>this.$route</code> 和 <code>this.$router</code> 同样可以使用。</p>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">提示</p>\n<p><code>lastUpdated</code> 是这个文件最后一次 git 提交的 UNIX 时间戳，更多细节请参考：<router-link to=\"./default-theme-config.html#最后更新时间\">最后更新时间</router-link>。</p>\n</div>\n<p><strong>参考:</strong></p>\n<ul>\n<li><router-link to=\"./../guide/global-computed.html\">全局计算属性</router-link>.</li>\n</ul>\n<h2 id=\"应用配置\"><a class=\"header-anchor\" href=\"#应用配置\" aria-hidden=\"true\">#</a> 应用配置</h2>\n<p>自定义主题也可以通过主题根目录下的 <code>enhanceApp.js</code> 文件来对 VuePress 应用进行拓展配置。这个文件应当 <code>export default</code> 一个钩子函数，并接受一个包含了一些应用级别属性的对象作为参数。你可以使用这个钩子来安装一些附加的 Vue 插件、注册全局组件，或者增加额外的路由钩子等：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Vue<span class=\"token punctuation\">,</span> <span class=\"token comment\">// VuePress 正在使用的 Vue 构造函数</span>\n  options<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 附加到根实例的一些选项</span>\n  router<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 当前应用的路由实例</span>\n  siteData <span class=\"token comment\">// 站点元数据</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...做一些其他的应用级别的优化</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br></div><!--beforeend--></div><!--afterend--></ContentSlotsDistributor>\n",null]}