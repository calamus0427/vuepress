{"remainingRequest":"/Users/calamus/calamus/my-project/vue-press/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/calamus/calamus/my-project/vue-press/node_modules/vuepress-theme-yubisaki/components/SWUpdatePopup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/vuepress-theme-yubisaki/components/SWUpdatePopup.vue","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"/Users/calamus/calamus/my-project/vue-press/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    updateEvent: {\n      type: Object,\n      default: null\n    }\n  },\n  computed: {\n    popupConfig: function popupConfig() {\n      var _arr = [this.$themeLocaleConfig, this.$site.themeConfig];\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var config = _arr[_i];\n        var sw = config.serviceWorker;\n\n        if (sw && sw.updatePopup) {\n          return _typeof(sw.updatePopup) === 'object' ? sw.updatePopup : {};\n        }\n      }\n\n      return null;\n    },\n    enabled: function enabled() {\n      return Boolean(this.popupConfig && this.updateEvent);\n    },\n    message: function message() {\n      var c = this.popupConfig;\n      return c && c.message || 'Get new content';\n    },\n    buttonText: function buttonText() {\n      var c = this.popupConfig;\n      return c && c.buttonText || 'Refresh';\n    }\n  },\n  methods: {\n    reload: function reload() {\n      if (this.updateEvent) {\n        this.updateEvent.skipWaiting().then(function () {\n          console.log('PWA 正在开启新的 serviceWorker');\n          location.reload(true);\n        });\n        this.updateEvent = null;\n      }\n    }\n  }\n};",{"version":3,"sources":["SWUpdatePopup.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GADA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AAAA,iBACA,CAAA,KAAA,kBAAA,EAAA,KAAA,KAAA,CAAA,WAAA,CADA;;AACA,+CAAA;AAAA,YAAA,MAAA,WAAA;AACA,YAAA,EAAA,GAAA,MAAA,CAAA,aAAA;;AACA,YAAA,EAAA,IAAA,EAAA,CAAA,WAAA,EAAA;AACA,iBAAA,QAAA,EAAA,CAAA,WAAA,MAAA,QAAA,GAAA,EAAA,CAAA,WAAA,GAAA,EAAA;AACA;AACA;;AACA,aAAA,IAAA;AACA,KATA;AAUA,IAAA,OAVA,qBAUA;AACA,aAAA,OAAA,CAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA;AACA,KAZA;AAaA,IAAA,OAbA,qBAaA;AACA,UAAA,CAAA,GAAA,KAAA,WAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,OAAA,IAAA,iBAAA;AACA,KAhBA;AAiBA,IAAA,UAjBA,wBAiBA;AACA,UAAA,CAAA,GAAA,KAAA,WAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,UAAA,IAAA,SAAA;AACA;AApBA,GAPA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,UAAA,KAAA,WAAA,EAAA;AACA,aAAA,WAAA,CAAA,WAAA,GAAA,IAAA,CAAA,YAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,0BAAA;AACA,UAAA,QAAA,CAAA,MAAA,CAAA,IAAA;AACA,SAHA;AAIA,aAAA,WAAA,GAAA,IAAA;AACA;AACA;AATA;AA7BA,CAAA","sourcesContent":["<template>\n  <transition name=\"sw-update-popup\">\n    <div\n      v-if=\"enabled\"\n      class=\"sw-update-popup\"\n    >\n      {{message}}<br>\n      <button @click=\"reload\">{{buttonText}}</button>\n    </div>\n  </transition>\n</template>\n\n<script>\nexport default {\n  props: {\n    updateEvent: {\n      type: Object,\n      default: null\n    }\n  },\n  computed: {\n    popupConfig () {\n      for (const config of [this.$themeLocaleConfig, this.$site.themeConfig]) {\n        const sw = config.serviceWorker\n        if (sw && sw.updatePopup) {\n          return typeof sw.updatePopup === 'object' ? sw.updatePopup : {}\n        }\n      }\n      return null\n    },\n    enabled () {\n      return Boolean(this.popupConfig && this.updateEvent)\n    },\n    message () {\n      const c = this.popupConfig\n      return (c && c.message) || 'Get new content';\n    },\n    buttonText () {\n      const c = this.popupConfig\n      return (c && c.buttonText) || 'Refresh'\n    }\n  },\n  methods: {\n    reload () {\n      if (this.updateEvent) {\n        this.updateEvent.skipWaiting().then(() => {\n          console.log('PWA 正在开启新的 serviceWorker');\n          location.reload(true)\n        })\n        this.updateEvent = null\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n@import '../styles/config.styl'\n.sw-update-popup\n  position fixed\n  right 1em\n  bottom 1em\n  padding 1em\n  border 1px solid $accentColor\n  border-radius 3px\n  background #fff\n  box-shadow 0 4px 16px rgba(0, 0, 0, 0.5)\n  text-align center\n  button\n    cursor pointer\n    border 1px solid $accentColor\n    border-radius 2px\n    margin-top 0.5em\n    padding 0.25em 2em\n    transition .3s\n    &:focus\n      outline 0\n    &:active, &:hover\n      outline 0\n      background-color $accentColor\n      color #fff\n.sw-update-popup-enter-active, .sw-update-popup-leave-active\n  transition opacity 0.3s, transform 0.3s\n.sw-update-popup-enter, .sw-update-popup-leave-to\n  opacity 0\n  transform translate(0, 50%) scale(0.5)\n</style>"],"sourceRoot":"node_modules/vuepress-theme-yubisaki/components"}]}