{"remainingRequest":"/Users/calamus/calamus/my-project/vue-press/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/calamus/calamus/my-project/vue-press/node_modules/vuepress-theme-yubisaki/package/comment/components/Comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/vuepress-theme-yubisaki/package/comment/components/Comment.vue","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.index-of\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Svg from \"./Svg\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport buildDistanceInWordsLocaleZHCN from \"date-fns/locale/zh_cn/build_distance_in_words_locale/index\";\nimport \"github-markdown-css/github-markdown.css\";\nvar ZHCN = buildDistanceInWordsLocaleZHCN();\nexport default {\n  components: {\n    SvgSpinner: Svg\n  },\n  props: {\n    user: {\n      default: null\n    },\n    comment: {\n      default: null\n    },\n    language: {\n      default: \"en\"\n    },\n    commentedText: {\n      default: \"\"\n    },\n    admin: {\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  computed: {\n    enableEdit: function enableEdit() {\n      if (this.user) {\n        return this.comment.user.login === this.user.login;\n      }\n\n      return false;\n    },\n    avatarUrl: function avatarUrl() {\n      if (this.comment.user) {\n        return this.comment.user.avatar_url;\n      }\n\n      return null;\n    },\n    userInfoUrl: function userInfoUrl() {\n      if (this.comment.user) {\n        return this.comment.user.html_url;\n      }\n\n      return null;\n    },\n    userName: function userName() {\n      if (this.comment.user) {\n        return this.comment.user.login;\n      }\n\n      return \"\";\n    },\n    commentDate: function commentDate() {\n      distanceInWordsToNow(this.comment.created_at, {\n        addSuffix: true,\n        locale: {\n          distanceInWords: ZHCN\n        }\n      });\n    },\n    reactions: function reactions() {\n      return this.comment.reactions;\n    },\n    reactionCount: function reactionCount() {\n      var count = 0;\n      var reactions = this.reactions;\n\n      if (reactions && reactions.totalCount) {\n        count = reactions.totalCount;\n\n        if (reactions.totalCount === 100 && reactions.pageInfo && reactions.pageInfo.hasNextPage) {\n          count = \"100+\";\n        }\n      }\n\n      return count;\n    },\n    isAdmin: function isAdmin() {\n      return ~[].concat(this.admin).map(function (a) {\n        return a.toLowerCase();\n      }).indexOf(this.comment.user.login.toLowerCase());\n    },\n    commentClass: function commentClass() {\n      return [\"gt-comment\", {\n        \"gt-comment-admin\": this.isAdmin\n      }];\n    }\n  },\n  methods: {\n    reply: function reply() {\n      this.$emit('reply', this.comment);\n    },\n    likeAction: function likeAction() {\n      if (this.reactions && this.reactions.viewerHasReacted) {\n        this.$emit('unlike', this.comment);\n      } else {\n        this.$emit('like', this.comment);\n      }\n    }\n  }\n};",{"version":3,"sources":["Comment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div :class=\"commentClass\">\n        <!-- avatar -->\n        <div class=\"gt-avatar gt-comment-avatar\">\n            <img :src=\"avatarUrl\" alt=\"avatar\">\n        </div>\n        <!-- comment content -->\n        <div class=\"gt-comment-content\">\n            <div class=\"gt-comment-header\">\n                <a\n                    class=\"gt-comment-username\"\n                    :href=\"userInfoUrl\">\n                    {{userName}}\n                </a>\n                <span class=\"gt-comment-text\">\n                    {{commentedText}}\n                </span>\n                <!-- date -->\n                <span class=\"gt-comment-date\">\n                    {{commentDate}}\n                </span>\n                <!-- comment like -->\n                <a class=\"gt-comment-like\" @click=\"likeAction\" v-if=\"reactions\">\n                    <SvgSpinner\n                        v-if=\"reactions.viewerHasReacted\"\n                        class=\"gt-ico-heart\" \n                        name=\"heart_on\" \n                        :text=\"reactionCount\" />\n                    <SvgSpinner\n                        v-else\n                        class=\"gt-ico-heart\" \n                        name=\"heart\" \n                        :text=\"reactionCount\"/>\n                </a>\n                <!-- edit -->\n                <a \n                    v-if=\"enableEdit\"\n                    :href=\"comment.html_url\" \n                    class=\"gt-comment-edit\" \n                    target=\"_blank\">\n                    <SvgSpinner class=\"gt-ico-edit\" name=\"edit\"/>\n                </a>\n                <a \n                    v-else\n                    class=\"gt-comment-reply\" \n                    @click=\"reply\">\n                    <SvgSpinner class=\"gt-ico-reply\" name=\"reply\"/>\n                </a>\n            </div>\n            <div \n                class=\"gt-comment-body markdown-body\" \n                v-html=\"comment.body_html\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Svg from \"./Svg\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport buildDistanceInWordsLocaleZHCN from \"date-fns/locale/zh_cn/build_distance_in_words_locale/index\";\nimport \"github-markdown-css/github-markdown.css\";\n\nconst ZHCN = buildDistanceInWordsLocaleZHCN();\n\nexport default {\n    components: {\n        SvgSpinner: Svg\n    },\n    props: {\n        user: {\n            default: null\n        },\n        comment: {\n            default: null\n        },\n        language: {\n            default: \"en\"\n        },\n        commentedText: {\n            default: \"\"\n        },\n        admin: {\n            default: () => []\n        }\n    },\n    computed: {\n        enableEdit() {\n            if (this.user) {\n                return this.comment.user.login === this.user.login;\n            }\n            return false;\n        },\n        avatarUrl() {\n            if (this.comment.user) {\n                return this.comment.user.avatar_url;\n            }\n            return null;\n        },\n        userInfoUrl() {\n            if (this.comment.user) {\n                return this.comment.user.html_url;\n            }\n            return null;\n        },\n        userName() {\n            if (this.comment.user) {\n                return this.comment.user.login;\n            }\n            return \"\";\n        },\n        commentDate() {\n            distanceInWordsToNow(this.comment.created_at, {\n                addSuffix: true,\n                locale: {\n                    distanceInWords: ZHCN\n                }\n            });\n        },\n        reactions() {\n            return this.comment.reactions;\n        },\n        reactionCount() {\n            let count = 0;\n            const reactions = this.reactions;\n            if (reactions && reactions.totalCount) {\n                count = reactions.totalCount;\n                if (\n                    reactions.totalCount === 100 &&\n                    reactions.pageInfo &&\n                    reactions.pageInfo.hasNextPage\n                ) {\n                    count = \"100+\";\n                }\n            }\n            return count;\n        },\n        isAdmin() {\n            return ~[]\n                .concat(this.admin)\n                .map(a => a.toLowerCase())\n                .indexOf(this.comment.user.login.toLowerCase());\n        },\n        commentClass() {\n            return [\n                \"gt-comment\",\n                {\n                    \"gt-comment-admin\": this.isAdmin\n                }\n            ];\n        }\n    },\n    methods: {\n        reply() {\n            this.$emit('reply', this.comment)\n        },\n        likeAction() {\n            if (this.reactions && this.reactions.viewerHasReacted) {\n                this.$emit('unlike', this.comment)\n            } else {\n                this.$emit('like', this.comment)\n            }\n        }\n    }\n};\n</script>\n"],"sourceRoot":"node_modules/vuepress-theme-yubisaki/package/comment/components"}]}