{"remainingRequest":"/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/calamus/calamus/my-project/vue-press/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/calamus/calamus/my-project/vue-press/docs/zh/miscellaneous/design-concepts.md?vue&type=template&id=eabfd722&","dependencies":[{"path":"/Users/calamus/calamus/my-project/vue-press/docs/zh/miscellaneous/design-concepts.md","mtime":1547029404000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/@vuepress/markdown-loader/index.js","mtime":1546968779000}],"contextDependencies":[],"result":["\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><h1 id=\"vuepress-1-x-的设计理念\"><a class=\"header-anchor\" href=\"#vuepress-1-x-的设计理念\" aria-hidden=\"true\">#</a> VuePress 1.x 的设计理念</h1>\n<p>VuePress 1.x 的设计理念主要体现在以下几个方面：</p>\n<ol>\n<li>插件化</li>\n<li>约定大于配置</li>\n<li>合理的优先级管理</li>\n</ol>\n<h2 id=\"插件化\"><a class=\"header-anchor\" href=\"#插件化\" aria-hidden=\"true\">#</a> 插件化</h2>\n<p>VuePress 1.0 进行了大范围的重写，其中最重要的就是引入 <router-link to=\"./../plugin/\">Plugin API</router-link>，那么插件带来的好处究竟是什么呢？</p>\n<h3 id=\"解耦\"><a class=\"header-anchor\" href=\"#解耦\" aria-hidden=\"true\">#</a> 解耦</h3>\n<p>有了插件，我们可以将很多核心功能用插件来实现，你可以在<a href=\"https://github.com/vuejs/vuepress/tree/master/packages/%40vuepress/core/lib/internal-plugins\" target=\"_blank\" rel=\"noopener noreferrer\">这里<OutboundLink/></a>看到很多内置的插件，这些插件涵盖了很多 VuePress 的核心功能，在以前，它们糅合在代码库的各个地方，但现在，它们一目了然。</p>\n<h3 id=\"配置的管理\"><a class=\"header-anchor\" href=\"#配置的管理\" aria-hidden=\"true\">#</a> 配置的管理</h3>\n<p>在过去，当我们遇到一些不太常见的需求时，我们会有一些疑虑：如果我们打算不支持，VuePress 的使用场景也就受到了限制；但如果想要支持它，我们就必须将其写到核心代码库中，并为其单独开设配置的 API。对于维护者来说，除了不利于长久的维护，这有时也会让我们心力交瘁。我们必须想到一些更好的解决办法，没错，这个办法就是插件。</p>\n<h3 id=\"vuepress-config-js-也是插件\"><a class=\"header-anchor\" href=\"#vuepress-config-js-也是插件\" aria-hidden=\"true\">#</a> <code>.vuepress/config.js</code> 也是插件</h3>\n<p>没错，你的配置文件也是一个插件，因此，你可以直接使用插件 API，而不必为此新建一个插件，然后在配置中导入它。</p>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">TIP</p>\n<p><code>.vuepress/config.js</code> 所支持的 API，实际上是在插件选项的基础上又新增了一些特定的选项。</p>\n</div>\n<h3 id=\"theme-index-js-也是插件\"><a class=\"header-anchor\" href=\"#theme-index-js-也是插件\" aria-hidden=\"true\">#</a> <code>theme/index.js</code> 也是插件</h3>\n<p>主题的根配置文件也是插件。</p>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">TIP</p>\n<p>和 <code>.vuepress/config.js</code> 一样，<code>theme/config.js</code> 所支持的选项，也是在插件选项的基础上，又新增了一些特定的选项。用一张图来表达它们的关系就是：</p>\n<svg viewBox=\"0 0 2806 912\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <!-- Generator: Sketch 51 (57462) - http://www.bohemiancoding.com/sketch -->\n    <desc>Created with Sketch.</desc>\n    <defs></defs>\n    <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <rect id=\"Rectangle-3\" fill-opacity=\"0\" fill=\"#FFFFFF\" x=\"0\" y=\"0\" width=\"2806\" height=\"912\"></rect>\n        <circle id=\"Oval\" stroke=\"#979797\" fill=\"#EC5975\" cx=\"1212.5\" cy=\"455.5\" r=\"355.5\"></circle>\n        <circle id=\"Oval\" stroke=\"#979797\" fill=\"#937AC4\" cx=\"1592.5\" cy=\"455.5\" r=\"355.5\"></circle>\n        <path d=\"M1402.5,155.000018 C1501.96722,218.018606 1568,329.058303 1568,455.520781 C1568,581.983259 1501.96722,693.022956 1402.5,756.041544 C1303.03279,693.022977 1237,581.983271 1237,455.520781 C1237,329.058291 1303.03279,218.018585 1402.50003,155 Z\" id=\"Combined-Shape\" stroke=\"#FFFFFF\" stroke-width=\"10\" fill=\"#00BD8C\"></path>\n        <text id=\".vuepress/-config.js\" font-family=\"ArialMT, Arial\" font-size=\"60\" font-weight=\"normal\" fill=\"#FFFFFF\">\n            <tspan x=\"901.101562\" y=\"436\">.vuepress/</tspan>\n            <tspan x=\"929.446289\" y=\"503\">config.js</tspan>\n        </text>\n        <text id=\"Plugin-API\" font-family=\"ArialMT, Arial\" font-size=\"72\" font-weight=\"normal\" fill=\"#FFFFFF\">\n            <tspan x=\"1302.42773\" y=\"436\">Plugin</tspan>\n            <tspan x=\"1344.47461\" y=\"516\">API</tspan>\n        </text>\n        <text id=\"theme/-index.js\" font-family=\"ArialMT, Arial\" font-size=\"60\" font-weight=\"normal\" fill=\"#FFFFFF\">\n            <tspan x=\"1662.78613\" y=\"436\">theme/</tspan>\n            <tspan x=\"1652.78125\" y=\"503\">index.js</tspan>\n        </text>\n    </g>\n</svg>\n</div>\n<h3 id=\"在插件中使用插件\"><a class=\"header-anchor\" href=\"#在插件中使用插件\" aria-hidden=\"true\">#</a> 在插件中使用插件</h3>\n<p>在 VuePress 中，你拥有在插件中使用插件的能力：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// vuepress-plugin-xxx</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div><!--beforeend--></div><!--afterend--><h2 id=\"约定大于配置\"><a class=\"header-anchor\" href=\"#约定大于配置\" aria-hidden=\"true\">#</a> 约定大于配置</h2>\n<p>VuePress 1.0 开始引入一些约定，以减少用户过多的配置压力。对于这一点，最直观的体现是对<router-link to=\"./../guide/directory-structure.html\">文档目录结构</router-link>和<router-link to=\"./../theme/writing-a-theme.html#目录结构\">主题目录结构</router-link>的约定。</p>\n<p>未来我们可能还会结合社区的反馈来引入更多的约定，让我们拭目以待。</p>\n<h2 id=\"合理的优先级管理\"><a class=\"header-anchor\" href=\"#合理的优先级管理\" aria-hidden=\"true\">#</a> 合理的优先级管理</h2>\n<p>资深的 VuePress 用户可能已经发现，主题开发者和普通的文档用户都具有定义全局的 <code>palette</code>、<code>style</code>、<code>templates</code> 和 <code>plugins</code> 的能力，那么他们是如何协同工作的呢？</p>\n<h3 id=\"加载优先级\"><a class=\"header-anchor\" href=\"#加载优先级\" aria-hidden=\"true\">#</a> 加载优先级</h3>\n<p><code>templates/*</code> 遵循一定的加载优先级，以 <code>templates/ssr.html</code> 为例：</p>\n<FlowChart id=\"flowchart_382ee23f\" :code=\"$dataBlock.flowchart_382ee23f\" preset=\"vue\"></FlowChart><div class=\"warning custom-block\"><p class=\"custom-block-title\">注意</p>\n<p>当你想要去自定义 <code>templates/ssr.html</code> 或 <code>templates/dev.html</code> 时，最好基于 <a href=\"https://github.com/vuejs/vuepress/blob/master/packages/%40vuepress/core/lib/app/index.dev.html\" target=\"_blank\" rel=\"noopener noreferrer\">默认的模板文件<OutboundLink/></a> 来修改，否则可能会导致构建出错。</p>\n</div>\n<h3 id=\"overriding\"><a class=\"header-anchor\" href=\"#overriding\" aria-hidden=\"true\">#</a> Overriding</h3>\n<p>对于 <code>palette.styl</code>、<code>index.styl</code> 和 <code>plugins</code>, 遵循 <code>overriding</code> 的原则：</p>\n<h4 id=\"palette-styl\"><a class=\"header-anchor\" href=\"#palette-styl\" aria-hidden=\"true\">#</a> <code>palette.styl</code></h4>\n<p>用户的 <code>styles/palette.styl</code> 具有比主题的 <code>styles/palette.styl</code> 更高的优先级，因此主题可以先预定义一套调色板，而用户又可以根据自身需要修改它。例如：</p>\n<!--beforebegin--><div class=\"language-stylus line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-stylus\"><code><span class=\"token comment\">// theme/styles/palette.styl</span>\n<span class=\"token variable-declaration\"><span class=\"token variable\">$accentColor</span> <span class=\"token operator\">=</span> <span class=\"token hexcode\">#0f0</span></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-stylus line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-stylus\"><code><span class=\"token comment\">// .vuepress/styles/palette.styl</span>\n<span class=\"token variable-declaration\"><span class=\"token variable\">$accentColor</span> <span class=\"token operator\">=</span> <span class=\"token hexcode\">#f00</span></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><p><code>$accentColor</code> 最终的值是 <code>#f00</code>。</p>\n<h4 id=\"index-styl\"><a class=\"header-anchor\" href=\"#index-styl\" aria-hidden=\"true\">#</a> <code>index.styl</code></h4>\n<p>用户和主题的 <code>styles/index.styl</code> 都会被生成到最终的 CSS 文件中，但是默认情况下，用户的样式会生成在主题的样式后面，因此对于同样的选择器，用户的样式将具有更高的优先级，如：</p>\n<!--beforebegin--><div class=\"language-stylus line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-stylus\"><code><span class=\"token comment\">// theme/styles/index.styl</span>\n<span class=\"token selector\">.content</span>\n  <span class=\"token property-declaration\"><span class=\"token property\">font-size</span> <span class=\"token number\">14</span>px</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-stylus line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-stylus\"><code><span class=\"token comment\">// .vuepress/styles/index.styl</span>\n<span class=\"token selector\">.content</span>\n  <span class=\"token property-declaration\"><span class=\"token property\">font-size</span> <span class=\"token number\">15</span>px</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><p>最终生成的 CSS 文件如下：</p>\n<!--beforebegin--><div class=\"language-css line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-css\"><code><span class=\"token comment\">/* theme/styles/index.styl */</span>\n<span class=\"token selector\">.content</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* theme/styles/index.styl */</span>\n<span class=\"token selector\">.content</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br></div><!--beforeend--></div><!--afterend--><h4 id=\"plugins\"><a class=\"header-anchor\" href=\"#plugins\" aria-hidden=\"true\">#</a> <code>plugins</code></h4>\n<p>由于同名插件默认情况下只能应用一次，因此用户可以修改主题中预置的插件选项的默认值，如：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// theme/index.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'@vuepress/i18n-ui'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> route<span class=\"token punctuation\">:</span> <span class=\"token string\">'/i18n-page/'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span> \n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div><!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// .vuepress/config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'@vuepress/i18n-ui'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> route<span class=\"token punctuation\">:</span> <span class=\"token string\">'/i18n/'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span> \n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div><!--beforeend--></div><!--afterend--><p>i18n UI 最终的路由将是 <code>/i18n/</code>.</p>\n<h2 id=\"其他\"><a class=\"header-anchor\" href=\"#其他\" aria-hidden=\"true\">#</a> 其他</h2>\n<p>本着解耦的目标，引入 monorepo 后，我们也得以将 VuePress 分离成以下两个库：</p>\n<ul>\n<li><a href=\"https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/core\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/core<OutboundLink/></a>：包含 dev、build 的核心实现和 Plugin API；</li>\n<li><a href=\"https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/theme-default\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/theme-default<OutboundLink/></a>：你现在所看到的默认主题。</li>\n</ul>\n<p>当然，对于大多数用户来说，你并不需要关心上述三个库，<a href=\"https://www.npmjs.com/search?q=vuepress\" target=\"_blank\" rel=\"noopener noreferrer\">vuepress<OutboundLink/></a> 这个包已经将上述三个包组装在一起，因此你完全可以像 <code>0.x</code> 那样使用 VuePress。</p>\n</ContentSlotsDistributor>\n",null]}