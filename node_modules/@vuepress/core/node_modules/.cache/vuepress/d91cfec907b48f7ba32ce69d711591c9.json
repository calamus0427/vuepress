{"remainingRequest":"/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/calamus/calamus/my-project/vue-press/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/calamus/calamus/my-project/vue-press/docs/guide/assets.md?vue&type=template&id=047865b1&","dependencies":[{"path":"/Users/calamus/calamus/my-project/vue-press/docs/guide/assets.md","mtime":1547029404000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/calamus/calamus/my-project/vue-press/node_modules/@vuepress/markdown-loader/index.js","mtime":1546968779000}],"contextDependencies":[],"result":["\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><h1 id=\"asset-handling\"><a class=\"header-anchor\" href=\"#asset-handling\" aria-hidden=\"true\">#</a> Asset Handling</h1>\n<h2 id=\"relative-urls\"><a class=\"header-anchor\" href=\"#relative-urls\" aria-hidden=\"true\">#</a> Relative URLs</h2>\n<p>All markdown files are compiled into Vue components and processed by webpack, therefore you can and <strong>should prefer</strong> referencing any asset using relative URLs:</p>\n<!--beforebegin--><div class=\"language-md line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-md\"><code><span class=\"token url\">![An image](./image.png)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>This would work the same way as in <code>*.vue</code> file templates. The image will be processed with <code>url-loader</code> and <code>file-loader</code>, and copied to appropriate locations in the generated static build.</p>\n<p>In addition, you can use the <code>~</code> prefix to explicitly indicate this is a webpack module request, allowing you to reference files with webpack aliases or from npm dependencies:</p>\n<!--beforebegin--><div class=\"language-md line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-md\"><code><span class=\"token url\">![Image from alias](~@alias/image.png)</span>\n<span class=\"token url\">![Image from dependency](~some-dependency/image.png)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><p>webpack aliases can be configured via <router-link to=\"/config/#configurewebpack\">configureWebpack</router-link> in <code>.vuepress/config.js</code>. Example:</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  configureWebpack<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    resolve<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      alias<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'@alias'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'path/to/some/dir'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br></div><!--beforeend--></div><!--afterend--><h2 id=\"public-files\"><a class=\"header-anchor\" href=\"#public-files\" aria-hidden=\"true\">#</a> Public Files</h2>\n<p>Sometimes you may need to provide static assets that are not directly referenced in any of your markdown or theme components - for example, favicons and PWA icons. In such cases you can put them inside <code>.vuepress/public</code> and they will be copied to the root of the generated directory.</p>\n<h2 id=\"base-url\"><a class=\"header-anchor\" href=\"#base-url\" aria-hidden=\"true\">#</a> Base URL</h2>\n<p>If your site is deployed to a non-root URL, you will need to set the <code>base</code> option in <code>.vuepress/config.js</code>. For example, if you plan to deploy your site to <code>https://foo.github.io/bar/</code>, then <code>base</code> should be set to <code>&quot;/bar/&quot;</code> (it should always start and end with a slash).</p>\n<p>With a base URL, if you want to reference an image in <code>.vuepress/public</code>, you'd have to use URLs like <code>/bar/image.png</code>. However, this is brittle if you ever decide to change the <code>base</code> later. To help with that, VuePress provides a built-in helper <code>$withBase</code> (injected onto Vue's prototype) that generates the correct path:</p>\n<!--beforebegin--><div class=\"language-vue line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-vue\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>$withBase(<span class=\"token punctuation\">'</span>/foo.png<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>foo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>Note you can use the above syntax not only in theme components, but in your markdown files as well.</p>\n<p>In addition, if a <code>base</code> is set, it is automatically prepended to all asset URLs in <code>.vuepress/config.js</code> options.</p>\n</ContentSlotsDistributor>\n",null]}